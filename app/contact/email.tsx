'use client'

import { PropsWithChildren, useState } from "react"

export function Email({ children }: PropsWithChildren) {
  const [copied, setCopied] = useState(false)

  const copyToClipboard = async (text: string) => {
    try {
      await navigator.clipboard.writeText(text)
      setCopied(true)
    } catch (error) {
    }
  }

  return (<>
    {!copied && <button className="flex text-base md:text-xl items-center underline" onClick={() => copyToClipboard(children?.toString() || '')}>
      { children } <Icon />
    </button>}
    {copied && <button className="text-xl" onClick={() => { setCopied(false) }}>Email copied!</button>}
  </>)
}

function Icon() {
  return (
    <svg width="25" height="25" viewBox="0 0 44 44" fill="none">
      <path d="M14.575 3.8501C11.8442 3.8501 9.62498 6.06935 9.62498 8.8001V10.4501H8.79998C6.07005 10.4501 3.84998 12.6702 3.84998 15.4001V35.2001C3.84998 37.93 6.07005 40.1501 8.79998 40.1501H28.6C31.3299 40.1501 33.55 37.93 33.55 35.2001V34.3751H35.2C37.9307 34.3751 40.15 32.1558 40.15 29.4251V8.8001C40.15 6.06935 37.9307 3.8501 35.2 3.8501H14.575ZM14.575 7.1501H35.2C36.1075 7.1501 36.85 7.8926 36.85 8.8001V29.4251C36.85 30.3326 36.1075 31.0751 35.2 31.0751H33.55V15.4001C33.55 12.6702 31.3299 10.4501 28.6 10.4501H12.925V8.8001C12.925 7.8926 13.6675 7.1501 14.575 7.1501ZM8.79998 13.7501H28.6C29.51 13.7501 30.25 14.4901 30.25 15.4001V35.2001C30.25 36.1101 29.51 36.8501 28.6 36.8501H8.79998C7.89 36.8501 7.14998 36.1101 7.14998 35.2001V15.4001C7.14998 14.4901 7.89 13.7501 8.79998 13.7501ZM22.2675 16.2267C20.8577 16.2267 19.4463 16.7662 18.3697 17.8429L16.225 19.9795C15.1525 21.0602 14.6169 22.4615 14.6169 23.8805C14.6169 25.283 15.1525 26.7026 16.225 27.7751C17.0216 28.5657 17.9976 29.0626 19.0174 29.2704L17.2756 31.0123C15.4218 32.8636 12.8029 31.1947 12.991 31.009C11.803 29.8293 11.803 27.9075 12.991 26.7277L13.3697 26.3475C13.081 25.5802 12.925 24.7548 12.925 23.8886C12.925 23.6741 12.9335 23.46 12.9491 23.2537C12.8914 23.3123 12.8634 23.3402 12.809 23.3955L11.2411 24.9698C9.08789 27.123 9.08628 30.6155 11.2395 32.7605C12.3129 33.8339 13.721 34.3719 15.1309 34.3719C16.5416 34.3719 17.9513 33.8355 19.0255 32.7622L21.1701 30.6175C23.3168 28.4708 23.3168 24.9774 21.1701 22.8299C21.2343 22.7657 20.0995 21.7067 18.3697 21.3491L20.1276 19.5912C21.3074 18.4114 23.2292 18.4032 24.4089 19.5912C25.5969 20.7709 25.5969 22.6927 24.4089 23.8725L24.0302 24.2527C24.319 25.02 24.475 25.8454 24.475 26.7116C24.475 26.9261 24.4673 27.1402 24.4508 27.3465C24.5094 27.2879 24.5175 27.279 24.5604 27.2353L26.1572 25.6304C28.3105 23.4772 28.3105 19.9879 26.1572 17.8429C25.0847 16.7662 23.6772 16.2267 22.2675 16.2267ZM17.2723 23.6694C18.5613 23.6723 19.3584 24.6417 19.4202 24.5798C20.0553 25.2144 20.3391 26.0621 20.292 26.8953C19.4625 26.9412 18.6178 26.6521 17.9829 26.0171C17.338 25.3767 17.056 24.5196 17.1112 23.6791C17.1649 23.6759 17.2202 23.6693 17.2723 23.6694Z" fill="#3D405B"/>
    </svg>
  )
}
